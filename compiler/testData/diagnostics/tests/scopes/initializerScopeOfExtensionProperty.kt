// !WITH_NEW_INFERENCE

package i

val <T> List<T>.length = <!NI;UNRESOLVED_REFERENCE!><!NI;EXTENSION_PROPERTY_WITH_BACKING_FIELD!><!UNRESOLVED_REFERENCE!><!EXTENSION_PROPERTY_WITH_BACKING_FIELD!>size<!><!><!><!>

val <T> List<T>.length1 : Int get() = size

val String.bd = <!NI;EXTENSION_PROPERTY_WITH_BACKING_FIELD!><!EXTENSION_PROPERTY_WITH_BACKING_FIELD!><!NI;NO_THIS!><!NO_THIS!>this<!><!> <!NI;DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE!><!DEBUG_INFO_ELEMENT_WITH_ERROR_TYPE!>+<!><!> "!"<!><!>

val String.bd1 : String get() = this + "!"


class A {
    val ii : Int = 1
}

val A.foo = <!NI;UNRESOLVED_REFERENCE!><!NI;EXTENSION_PROPERTY_WITH_BACKING_FIELD!><!UNRESOLVED_REFERENCE!><!EXTENSION_PROPERTY_WITH_BACKING_FIELD!>ii<!><!><!><!>

val A.foo1 : Int get() = ii


class C {
    inner class D {}
}

val C.foo : C.D = <!NI;EXTENSION_PROPERTY_WITH_BACKING_FIELD!><!EXTENSION_PROPERTY_WITH_BACKING_FIELD!><!NI;UNRESOLVED_REFERENCE!><!UNRESOLVED_REFERENCE!>D<!><!>()<!><!>

val C.bar : C.D = <!NI;EXTENSION_PROPERTY_WITH_BACKING_FIELD!><!EXTENSION_PROPERTY_WITH_BACKING_FIELD!>C().D()<!><!>

val C.foo1 : C.D get() = D()
